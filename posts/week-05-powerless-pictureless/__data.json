{"title":"week-05-powerless-pictureless","html":"<h1>Powerless, Pictureless Ôºç Week 4</h1>\n<p>This week I worked with Harrison to connect a servo motor, stepper motor and a\nsmall display to the Arduino with varying levels of success.</p>\n<h2>Stepper Motor</h2>\n<p><img src=\"https://cdn-learn.adafruit.com/assets/assets/000/009/516/medium800/adafruit_products_steppertest.jpg\" alt=\"Stepper shield\">\n<em>Source: <a href=\"https://learn.adafruit.com/adafruit-motor-shield-v2-for-arduino/using-stepper-motors\">Adafruit</a></em></p>\n<p>Firstly we followed <a href=\"https://learn.adafruit.com/adafruit-motor-shield-v2-for-arduino/using-stepper-motors\">this guide from Adafruit</a>\nto connect the stepper motor to the Arduino using the shield.</p>\n<p>A stepper motor is a very precise motor capable of powerful yet accurate movement.\nAlthough they can't move very quickly they used extensively in robotics and 3d printing.</p>\n<p>The first step was to install\na library to enable communication between the shield and Arduino. This, in theory,\nallows us to communicate to the chip on the shield in charge of controlling the\nstepper motor. After successfully installing the library and uploading the example\nsketch to the board... nothing happened. We checked all the connections and noticed\nthat the power LED on the board was off, and we still needed to connect a jumper\nto enable power to be drawn through the Arduino. Even after connecting this jumper\nnothing happened :(. We did a bit more research we discovered that the shield\nneeded to be powered by a external power supply which we didn't have access to.\nSince we were at an impasse we tried another actuator.</p>\n<h2>Servo Motor</h2>\n<p><img src=\"/360-servo.jpg\" alt=\"servo\"></p>\n<p>Servo motors are DC motors with a potentiometer connected to them so they can\nknow their position. They are simple to control and very versatile with many\ndifferent sizes and power levels. One of the main disadvantages is that they\nusually have a small range of about 180 degrees, this limits their application\nto actuators which only need to move back and forth rather than continuous\nmovement.</p>\n<p>The Arduino IDE comes with a built in servo library which makes it very easy to\nuse them. Simply connect the 5V and Ground wires to power and connect the control\nwire to any PWM pin.</p>\n<p>Servo Example Sketch:</p>\n<pre><code class=\"hljs language-arduino\"><span class=\"hljs-comment\">/*\n Controlling a servo position using a potentiometer (variable resistor)\n by Michal Rinott &#x3C;http://people.interaction-ivrea.it/m.rinott>\n\n modified on 8 Nov 2013\n by Scott Fitzgerald\n http://www.arduino.cc/en/Tutorial/Knob\n*/</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;Servo.h></span></span>\n\n<span class=\"hljs-built_in\">Servo</span> myservo;  <span class=\"hljs-comment\">// create servo object to control a servo</span>\n\n<span class=\"hljs-type\">int</span> potpin = A0;  <span class=\"hljs-comment\">// analog pin used to connect the potentiometer</span>\n<span class=\"hljs-type\">int</span> val;    <span class=\"hljs-comment\">// variable to read the value from the analog pin</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">setup</span><span class=\"hljs-params\">()</span> </span>{\n  myservo.<span class=\"hljs-built_in\">attach</span>(<span class=\"hljs-number\">9</span>);  <span class=\"hljs-comment\">// attaches the servo on pin 9 to the servo object</span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">loop</span><span class=\"hljs-params\">()</span> </span>{\n  val = <span class=\"hljs-built_in\">analogRead</span>(potpin);\n  val = <span class=\"hljs-built_in\">map</span>(val, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1023</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">180</span>);   \n  myservo.<span class=\"hljs-built_in\">write</span>(val);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">15</span>);\n}\n</code></pre>\n<p>We successfully did this with a spare servo motor I had!</p>\n<h2>Display</h2>\n<p><img src=\"/tft_display.jpg\" alt=\"display\">\n<em>That's probably not how it should look :(</em></p>\n<p>Our final actuator was a small display I had from a previous project a few years\nback. I was drawn to this screen as it is a simple way of communicating\ninformation to the user of a system.</p>\n<p>Following <a href=\"https://www.electronics-lab.com/project/using-1-44-color-tft-display-ili9163c-arduino/\">this guide</a>\nfrom electronics-lab we connected up the wires, installed the library (which was\na major hassle) and uploaded the sample sketch. Unfortunately it did not work,\nwe were presented with a black screen on a jumbled mess. We didn't have much time\nto troubleshoot the issues before this weeks class ended.</p>\n<h2>Thoughts</h2>\n<p>This week gave me a good experience working with and debugging different components.\nI saw some good opportunities to use the servo motor in my first project.</p>"}