{"title":"blinky-buzzy","html":"<h1>Blinky Buzzy Ôºç Weeks 1 - 3</h1>\n<h2>Arduino!</h2>\n<p><img src=\"/leds.png\" alt=\"addressable LEDs!\">\n<em>A representation of the Federal Senate using addressable LEDs</em></p>\n<p>I spent a lot of time with Arduino's back in high school mostly creating flashing\nlight displays with addressable LEDs. However, it's been a while since I've used\nArduino as I was wooed away by the fancier microcontrollers such as the ESP32\nwith wifi &#x26; bluetooth and the STM32 with a fast clock rate &#x26; modern(ish)\nCPU architecture.</p>\n<p>That being said, I'm looking forward to re-exploring what is a\nwonderful ecosystem and expressive  community of makers.</p>\n<p>As I've had a bit of experience building things with Arduino I've combined the\nfirst three weeks of blogs into one.</p>\n<h2>Connections and Saying Hello!</h2>\n<p>In order to say hello (in an arduino kind of way), we need to connect our\nArduino to the computer and software. Firstly, connect the Arduino to the\ncomputer via USB, then launch the Arduino\nsoftware and set the port to the one connected which is labelled as\n<code>Arduino Uno</code> (sometimes you just need to try them all).</p>\n<p>Now that the board is connected we can start uploading programs allowing us to\ncontrol the inputs and outputs.</p>\n<p>In computer science there is a long tradition of test something with a program\nwhich outputs the words \"Hello world!\". Because the Arduino doesn't have a\nscreen (yet) we opt for the much lower tech solution of blinking a LED which\nis the \"Hello World!\" equivalent for Arduino.</p>\n<pre><code class=\"hljs language-arduino\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">setup</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-comment\">// initialize digital pin LED_BUILTIN as an output.</span>\n  <span class=\"hljs-built_in\">pinMode</span>(<span class=\"hljs-literal\">LED_BUILTIN</span>, <span class=\"hljs-literal\">OUTPUT</span>); \n}\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">loop</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-comment\">// write the LED pin high turning it on.</span>\n  <span class=\"hljs-built_in\">digitalWrite</span>(<span class=\"hljs-literal\">LED_BUILTIN</span>, <span class=\"hljs-literal\">HIGH</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">1000</span>); <span class=\"hljs-comment\">// do nothing for 1000 milliseconds (1 sec)</span>\n  <span class=\"hljs-comment\">// write the LED pin low turning it off.</span>\n  <span class=\"hljs-built_in\">digitalWrite</span>(<span class=\"hljs-literal\">LED_BUILTIN</span>, <span class=\"hljs-literal\">LOW</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">1000</span>); <span class=\"hljs-comment\">// wait again</span>\n}\n</code></pre>\n<p>Above is the basic blink sketch provided. Arduino makes it very easy for us by\nproviding simple functions for setting and interacting with the Arduino hardware.\nThe functions used are annotated in the sketch.</p>\n<h3>Blink Different</h3>\n<p>Now that we know the Arduino is working we can start changing the sketch to do\nsomething a little more interesting!</p>\n<p><strong>Connecting an external LED</strong></p>\n<p>We can use a breadboard to connect a LED to the Arduino. A 220‚Ñ¶ resistor is\nadded to reduce the voltage across the LED which is designed for a lower voltage\nthan 5V. Pin 12 is used as the digital output which is then referenced in the\ncode below.</p>\n<p>üö® <em>Insert picture of breadboard with led and resistor</em> üö®</p>\n<p><strong>East Cardinal Mark</strong></p>\n<p>Instead of simply turning on and off the LED we now flash the LED with the pattern\nof an East Cardinal Mark which shows there is safe water to the East of the light\nwhen you are out on a boat!</p>\n<p><img src=\"/basic_led.png\" alt=\"led\"></p>\n<pre><code class=\"hljs language-arduino\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> PIN 12 <span class=\"hljs-comment\">// or LED_BUILTIN</span></span>\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">setup</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-comment\">// initialize digital pin LED_BUILTIN as an output.</span>\n  <span class=\"hljs-built_in\">pinMode</span>(PIN, <span class=\"hljs-literal\">OUTPUT</span>);\n}\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">loop</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-comment\">// East cardinal mark</span>\n  <span class=\"hljs-built_in\">digitalWrite</span>(PIN, <span class=\"hljs-literal\">HIGH</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">400</span>);\n  <span class=\"hljs-built_in\">digitalWrite</span>(PIN, <span class=\"hljs-literal\">LOW</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">400</span>);\n  <span class=\"hljs-built_in\">digitalWrite</span>(PIN, <span class=\"hljs-literal\">HIGH</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">400</span>);\n  <span class=\"hljs-built_in\">digitalWrite</span>(PIN, <span class=\"hljs-literal\">LOW</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">400</span>);\n  <span class=\"hljs-built_in\">digitalWrite</span>(PIN, <span class=\"hljs-literal\">HIGH</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">400</span>);\n  <span class=\"hljs-built_in\">digitalWrite</span>(PIN, <span class=\"hljs-literal\">LOW</span>);\n  <span class=\"hljs-built_in\">delay</span>(<span class=\"hljs-number\">5000</span>);\n}\n</code></pre>\n<p><img src=\"/cardinal_east_night.gif\" alt=\"Cardinal East Buoy Light\">\n<em>Cardinal East Buoy Light (shows there is safe water to the East of the light)</em>\n<em><a href=\"https://www.msq.qld.gov.au/Safety/Navigation-buoys-marks-and-beacons\">Source</a></em></p>"}